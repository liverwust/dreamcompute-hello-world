- hosts: localhost
  connection: local
  vars:
    ansible_python_interpreter: python
  tasks:

    - name: initialize a volume
      os_volume:
        name: "{{ host_name }}_os"
        state: present
        image: CentOS-7
        size: 20
      register: example_volume

    - name: launch an instance
      os_server:
        name: "{{ host_name }}"
        state: present
        flavor_ram: 4096
        key_name: "{{ key_name }}"
        terminate_volume: yes
        boot_volume: "{{ host_name }}_os"
        nics:
          - net-name: public
      register: example_server

    - name: get facts about the server (including its public v4 IP address)
      os_server_facts:
        server: "{{ host_name }}"
      until: example_server.server.public_v4 != ""
      retries: 5
      delay: 10

    - set_fact:
        public_v4: "{{ example_server.server.public_v4 }}"

    - name: add the server to our ansible inventory
      add_host: hostname={{ public_v4 }} groups=web ansible_ssh_user=centos

    - name: wait for ssh to be available
      wait_for: host={{ public_v4 }} port=22 state=started

- hosts: web
  become: True

  tasks:

    - name: restart the server (due to an ubuntu/ansible bug)
      command: shutdown -r now
      async: 0
      poll: 0
      ignore_errors: true

- hosts: localhost
  connection: local
  vars:
    ansible_python_interpreter: python
  tasks:

    - name: wait for ssh to be available
      wait_for: host={{ public_v4 }} port=22 state=started

- hosts: web
  become: True

  vars:

  tasks:

